/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package HashTable;


import org.junit.Test;

import static junit.framework.TestCase.assertEquals;

public class AppTest {


  //test the collision in the hashTable .
  @Test
  public void testCollision(){
    HashTable hashTable=new HashTable();
    hashTable.add("ab",10);
    hashTable.add("cd",14);
    //make sure that both keys have same index.
    assertEquals(hashTable.hash("ab"),hashTable.hash("cd"),0.0);
    //getting the data from the same index depend on its key.
    assertEquals(10,hashTable.get("ab"),0.0);
    assertEquals(14,hashTable.get("cd"),0.0);
  }
    // Test the add function to Hash table .
    @Test
    public void testAddingToHashTable(){
      HashTable hashTable=new HashTable();
      hashTable.add("abc",123);
      System.out.println(hashTable.array[hashTable.hash("abc")].value);
      assertEquals(123,hashTable.array[hashTable.hash("abc")].value,0.0);
    }

    // Test the get function from the hash table .
  @Test
  public void testGettingFunction(){
      HashTable hashTable= new HashTable();
      hashTable.add("ab",8);
      hashTable.add("cd",9);
      assertEquals(9,hashTable.get("cd"),0.0);
  }

    // Test Hash function .
  @Test
  public void testHashingFunction(){
      HashTable hashTable=new HashTable();
      String key="a";
      int hashResult=(int)key.charAt(0)/29;
      assertEquals(hashResult,hashTable.hash("a"));
  }
  // Test Contains function .
  @Test
  public void testContainsFunction(){
      HashTable hashTable =new HashTable();
    hashTable.add("ab",1);
    hashTable.add("bc",2);
    assertEquals("this function return true if its the key found",true,hashTable.contains("bc"));
    assertEquals("this function return true if its the key found",false,hashTable.contains("c"));
  }
}
